TabLib
.csv, .tsv, .xlsx, .xls, .json, .yaml, .ods, 

Template
.txt, .html, .xml, .pdf, .docx

https://python-docx.readthedocs.org/en/latest/#api-documentation
https://docs.djangoproject.com/en/dev/topics/templates/

Events
------

Summary:     Migraine
Description: Just finished Christmas in Banstead back in Blackheath about to head up to Worksop.  Had eaten and drank lots over past couple of days, also slept well.
Start:       26/07/2010
End:         26/07/2010
Attendees:   simon
Location:    Dartmouth
Created:     26/07/2010

<?xml version="1.0" encoding="utf-8"?>
<events>
	<event>
		<summary>Migraine</summary>
		<description>Just finished Christmas in Banstead back in Blackheath about to head up to Worksop.  Had eaten and drank lots over past couple of days, also slept well.</description>
		<start>26/07/2010</start>
		<end>26/07/2010</end>
		<location>Dartmouth</location>
	</event>
</events>


<!DOCTYPE html>

<html lang="en" xmlns="http://www.w3.org/1999/xhtml">
<head>
    <meta charset="utf-8" />
    <title>Migraines.ics</title>

    <style type="text/css">
    * { 
        border:none;
        margin:0;
        padding:0;
    }

    body {
    	font-family: sans-serif;
    	margin: 20px;
    }

    .event{
    	margin: 10px 0px;
    }

    .event > div > span{
    	min-width: 100px;
    	display: inline-block;
    }
    </style>

</head>
<body>
	<h1>Events</h1>

	<div class="event">
		<div>
			<span>Summary:</span>Migraine
		</div>
		<div>
			<span>Description: </span>Just finished Christmas in Banstead back in Blackheath about to head up to Worksop.  Had eaten and drank lots over past couple of days, also slept well.
		</div>
		<div>
			<span>Start: </span>26/07/2010
		</div>
		<div>
			<span>End: </span>26/07/2010
		</div>
	</div>
</body>
</html>



http://stackoverflow.com/questions/3777367/what-is-a-good-place-to-store-configuration-in-google-appengine-python

class Configuration(db.Model):
  CACHE_TIME = datetime.timedelta(minutes=5)

  _INSTANCE = None
  _INSTANCE_AGE = None

  @classmethod
  def get_instance(cls):
    now = datetime.datetime.now()
    if not cls._INSTANCE or cls._INSTANCE_AGE + cls.CACHE_TIME < now:
      cls._INSTANCE = cls.get_or_insert('config')
      cls._INSTANCE_AGE = now
    return cls._INSTANCE
